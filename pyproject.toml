[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "nim-mmcif"
version = "0.0.1"
description = "Fast mmCIF parser written in Nim with Python bindings"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "lucidrains", email = "lucidrains@gmail.com"}
]
maintainers = [
    {name = "lucidrains", email = "lucidrains@gmail.com"}
]
requires-python = ">=3.8"
dependencies = []

keywords = [
    "mmcif",
    "cif", 
    "protein",
    "structure",
    "bioinformatics",
    "structural-biology",
    "parser",
    "crystallography",
    "nim",
    "pdb"
]

classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Other",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Chemistry",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Operating System :: OS Independent",
]

[project.urls]
"Homepage" = "https://github.com/lucidrains/nim-mmcif"
"Bug Tracker" = "https://github.com/lucidrains/nim-mmcif/issues"
"Source Code" = "https://github.com/lucidrains/nim-mmcif"
"Documentation" = "https://github.com/lucidrains/nim-mmcif#readme"

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "black>=23.0",
    "ruff>=0.1.0",
]
test = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
]

[tool.setuptools]
packages = ["nim_mmcif_wrapper"]

[tool.setuptools.package-dir]
nim_mmcif_wrapper = "python_wrapper"

[tool.setuptools.package-data]
nim_mmcif_wrapper = [
    "*.so",
    "*.dylib",
    "*.pyd",
    "*.dll",
    "*.cpython-*.so",
    "*.cpython-*.dylib",
    "*.cp*-*.pyd",
    "platform_modules/**/*"
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']

[tool.ruff]
line-length = 100
target-version = "py38"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
]